(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     63917,       1318]
NotebookOptionsPosition[     63221,       1289]
NotebookOutlinePosition[     63598,       1305]
CellTagsIndexPosition[     63555,       1302]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"PD", "=", 
  RowBox[{"Uncompress", "[", 
   RowBox[{
    RowBox[{"ReadList", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Jack\\\\Desktop\\\\LabWork\\\\final\\\\Price168.txt\>\
\"", ",", "String"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.709770528237365*^9, {3.709770633076361*^9, 3.7097706544655848`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"300", ",", "300", ",", "300", ",", 
             RowBox[{"300", "+", 
              FractionBox["15", 
               SqrtBox["101"]]}], ",", 
             TemplateBox[{"1272"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
             RowBox[{"300", "-", 
              FractionBox["47", 
               SqrtBox["101"]], "-", 
              SqrtBox["101"]}], ",", 
             RowBox[{"300", "-", 
              FractionBox["56", 
               SqrtBox["101"]], "-", 
              SqrtBox["101"]}], ",", 
             RowBox[{"300", "-", 
              FractionBox["53", 
               SqrtBox["101"]], "-", 
              SqrtBox["101"]}]}], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{123., {5., 18.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{131., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{131., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 64, 24312339006157007383, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{147., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{95.5, {47., 25.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 64, 24312339006157007383, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{109., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{109., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 64, 24312339006157007383, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{190., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{190., {1., 20.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[64]]], "Output",
 CellChangeTimes->{{3.709770634610449*^9, 3.7097706550406175`*^9}, 
   3.7097707515141354`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"PD", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"150", ",", "400"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<p(T) =\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"PA", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", "3"}], 
         "]"}], "]"}]}], ",", 
      RowBox[{"\"\<p(T) =\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"PA", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", "3"}], 
         "]"}], "]"}]}], ",", 
      RowBox[{"\"\<p(T) =\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"PA", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", "3"}], 
         "]"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<p(t)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<p(T)= \>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"PA", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", "4"}], 
         "]"}], "]"}]}], ",", 
      RowBox[{"\"\<<A\!\(\*SubscriptBox[\(>\), \(T\)]\) =\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"PA", "\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", "2"}], 
         "]"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"12", ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}], ",", "Italic"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7097706490672755`*^9, 3.7097707176631994`*^9}, {
  3.7097707581445146`*^9, 3.7097707585605383`*^9}, {3.7097708771823235`*^9, 
  3.7097709744438863`*^9}, {3.7097710056896734`*^9, 3.7097711276706505`*^9}, {
  3.7097712196899137`*^9, 3.709771311123143*^9}, {3.709771407616662*^9, 
  3.709771411861905*^9}, {3.709771518519006*^9, 3.709771521546179*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxdW3l401W6DoJjFZDooFTEa5TFqogRUSuCfCpIQMTIZpEtQIFSWkj3FLr8
krRp0iTNhloENSpidRgNiloUMSpIUZQgqBUZCIpSFCQqAx0Hndt7b85zn/f1
nz6H129fzndOzu+aBSumLDpPp9P9p4dO9z9//++/1Jj//RMvlvQ/CK4zaK2X
gV8OdRz5Sq37yl5P36du+0GtM6XnlW+Zz/2o1gOk9IGTRyIn1NogI9+eOOzT
Y2p9rWz57Oll5n+p9SC587tfW/ZdVJJeDyE8S/IcLtf6CxR+g+iub1n5l+8U
PlReORh47NFf1HoY0Rvl9Lx7ru73p1rfIntf29pv1IWK33A5uP6Tk7dcota3
yuwtV9/4xrVqPUKuzaqu+Pkqtb5NLr99+bOdl6n17UR/B/HPloefzjvQelbJ
v1NKSh+b/WQfhY+UJX8b1u1vN6j1XdLx+IEPr7tCrUeJead++nv91Xq0NOa8
nuG6Wq3vlt/cx9dcdY1aj5HnRu3dXHSzWgvqrwnJv0dqF68fHuyn8Htk3Bfd
anddqvB7UT/tXtliOGWZM0bh94k51bpnx2iF3yfH3nPcPWyUwsdKbWDS3x8f
qfCxpN841F8bR/rdLxcVXnD/hbco/H7Cx8sr52fr5/dV+HjZcvb+H2YMULiJ
+Jsk8U1u+N6hCp8gd/ZaO/DATQqfIDf19z14dLDCJ8qO49O3Thqk8Inyn5Wd
K/56vcIfkMcnfnBo1XUKf4DkT5KeY+d9ct7FCp8k/Xp/NOTXX1U+PIj5qz1I
9TMZ60ebLPc7N3m27lb4QzIy9NzrH21X+EOy11Jw7c0fKtyM9GKWOUv23NZy
UP3/ZqzfOOG6h0XrO220c6+if1j6Hb1q4097FP3D8srrx/pP+0zRP5z+q+in
yBN7di3P26bop8jNz0T+kdiq6Kdgf4lPEe9fFv618mtFP1WWGm8PPfG+op+K
9mlTUb/4VKKfhvxlGtk/TZ7oLDq+/IiiJ1w3HXGZjvHRppP+0yk+M9A/MoP8
N4PoZ1B/fQTzQx7B/NEewf4SJ1yXg7jkYH/UcqR29Lm3PKcVfQ7l30zMD5kp
w9ruyvnqsKKfSf6bSfo/KnkzD/V8+qiif5ToH0X74o9KR+HwCdecUfSziH6W
jNs4s8eHpxT9LMrfWfL2C2dSE75U9LMp/rMxP7TZsuOJ83eOOaToZ5P+c0j+
HKKfQ/GbI6XXjlvi36Xo51L+zqX8nYv1EZ8rvn+83Vz8pqKfJ712LZ51ar2i
nydl/1p3wrVB0c+TQ7obu2fWK/p5cvzXO7/u7Vf0FsQNFun2yqsX/Vap+Fkk
/9D3axtXpdcWi4zP2HLFSwsVf4vY18z6dEVeeh21yNwTX+5YXaLkWWTQrBGX
frY8vU4SrpsvvSsuX/ztXCV/PvKX+XLoK4f7kgVK/nwpf3HS2UqLkk/00fmy
7/uS1658VMmfL7E+440j71Xy58sVUv3+3vuU/AXSe/Lyn765S8lfIP4FH2TN
e1DJXyD5b4y+pi5HyV9A9i8g+xfIj7tCcy/IV/IXSCz71MuySMknet1Csn8h
2icL5a7LX77v9VlK/kLUX1uI9kUXyr6tn9xx2R1K/kK0L0m4LlfaPt46/+qb
lfxc5C+5SG/JFdObeYPWXaXk58rUlorfQ4OV/Fx54arsR8eOVPJzZdTJbrs2
Ziv5hOsWof6GRWL896+/vmlU8hchvWUR6q8tQv2ji2Rr+9+911+n5C+SM0vN
Y1I3KvmLZN6TrkTDTUr+Yhl84dEB72cp+YtRP1mM/C2Lkb+2GPlHF8tPFfcs
/X2gkr8Y/ZNcjPbpliC9YQnqJ4RblqB+2hI5/MqB3j3HKPlLZGu3GX8xTlTy
l8ig4b4ndj6g5C/B/Nblkf/zKP8Jt+SR/DxZc+P1dZOHK/l55P88in8X/zv7
v5Jzg5K/lPy/FOMrSyXf99iG6tuUfMK1pWK3vj5l6Tglf6n8GD3+nW68kr8U
/ZNcKuU166tKRiv5+TJ179VlzSYlPx9xySf788U4aG3hu1OV/Hz0bzSf/J+P
+iXzqf8sI/8vo/pbhvwthGvLyP5lqH98GeZvchn5v0Ac43u2L7hWyS+QK/p9
cf8nBiW/QA7XD4/0GKDkF8h5t7715GG9kl8ga86zX2jqo+QXyC2fT7TFeiv5
Xfz/a+Gc2f8pSssvEJM//tJjv6fXukIZvXbTvmd+Ta8NhbI/f9W9Gb+k11Io
bbaCgkuPp9eWQmk6tqv1gaPptVYoffaVrWr7PL2OFsqG58b8aNybXscLpeCS
p27P363kF0pF9429LPuV/OUybcZ159cfVvKXS/eL+hi+PqnkL0f9LMvllpee
++OlH5X85ahfdLlYTLd/s/KYkr9clo0ct8l6SslfLvvv2bez22dK/grU37BC
uh9Z/MLnHyv5K+TJmLHvXbuU/BVy4pzpXz+8reSvkLsnzD8U3qjkr5AvMm98
8N8vK/mEJ7v4t267YfeLSr5VnLsvzXtoS3qtt0pg2zV3j3tf6WOV6TfVNtZs
Ta+NVhmu/e54fqfSr4v+n29/O/1gem22ov4W4m+1yrtz3rjy8m1Kf6uc/fmR
PQc/SK+DJD9KeIzo41YZ0vTTxr+/l14nCE9aMf4p0k9XRPYXie1A9/DMTcr+
Iunz8qe6D15V9hMuRdK549VpXz6j7CfcUiSvLdswzvCmsp9wrUgKOk6/s/Al
ZT/h0SL0f6wI/RMvwvxJFMm7rjmPDzii7C/C/EwVScXQaQ2Lzyr7i2XTu2dG
3nRO2V8s/X8eunv7H8r+Yqzfrn1r66vnXzKwh+oPxdL2bN9jmb3Sa3OxNOmL
b51ygeoXRG8tRvlaMdZHsBjrP1osZ/vpJn73vbK/mOqrWJ78ur3pnhPK/mKs
z2SxJG/99qmzXyj7i6n+S9B/+hL0n6EE+RtLsP9IiQx5K3Ld5m9V/Evkp8G/
lJz8h4p/iWxaPTk+5Gtlf4n031H38LYDyv4S7D9Boo+S/BjpFy9B/yRKyP4S
7F+pEvSvrhT560vRvwbCjaUyITfz5sBXyv5S7E/mUsxPS6nsemj7Lz0/UvaX
Yv/TSmV08YUz1+xR9peS/aXo31gp2V+K/kuUon+ThKdK0T+6MrK/jOwvw/5m
LEP5Uob5ZS7D/LIQbi2TFz45lnvHaWV/GcYnSPyjZZg/sTLsX/Ey7G8Jkp8s
w/xOlWH/1pVjf9WXY3wM5RgfI+FSjv3JXE72l6P/reXSf93BL996S9lfjv01
SHi0HPt7rBz7Y5zoE+W4/yXLsb+mymX4I1Mynlqv7K+QXUMGVJz/vLK/QgKP
VX5499PK/gpZ2+BeM2KDsp9wIXpzBe6vlgrUz1qB9aFV0P5HeLSC7K8Qy9VN
ltLtyv4K9H+iAv2XrCD7K2TbiN7P9lmr7LfhfKC3of8MNtr/bMhfbJK8aOTA
X15T9ttwPrHYUL7Vhv7XbOjfIOFR0i9mkw2VT6y44RVlP+mXIP2SNtzfUzbK
/0qsH30l0hsqaf6pRPlSifqZK2n/J9xaif7VKlG/YCX6L0ryY5W0/1dif01U
Yn4kCU9V0vy5kup/JfYXw0qq/5XU/wk3E72F+FtXUv6vJPu7+N9l3ezerOwn
PLYS/RNfSfEn+iTRpwjXrcL5TL8K50fDKqQ3Ei6rKP9XIX/LKqr/VTT/kfwg
8Y+uovivIvtJvwTxTxKeInpdFc2/VTT/V1H+VyG9VFH/q6L8J9zaRb8vWpN8
QtlfhfNzsArrI1qF/SNWhf0hXoX+T1Rh/00S/xTR66qx/+irqf9XI72xGuml
muyvpv5fjfpZiV6rpvhXU/1X0/mnmvb/aur/1Ri/ZDXWZ6qa6r8G+4O+hvb/
GuyPxho6/9XQ/Ee4pYbqv4b2/xqq/xo6/9Rg/cQIj9dQ/GvQf0ninyL5ulqk
19di/RpqKf9rKf+J3lyL+4Ollva/Wur/tTT/EH2U8Fgt2U94guiThKdqZf6Z
778vfFbZr2F+Z2hYn3pNhiy6b/iL69LrTA3nB4Mmr93758dXRNLrLE16BC6P
7ahT/tJk7dzkfw1zptfZmsz/dPSyJTXKf4SbCDd36bfuggN7qtLrHE1OvtzZ
/UCp8q8mR1qP33S0IL3O0+TLjw488nOu8rcm+pzqnm8sTa9tmlw50Xfk5SLl
f02mfzPssaLy9NpN8oOafPxHybk/a9PrZk1eNJ86PdCr4qNJ3fP5J02Pp9ct
5J8Y+adVkwmXtt3pCKn4aVL43qR75rjS67Yu/UpGzN60WsWzy74joZYfA+l1
uya2TbP6TW1S8dWkj32w6x1fet1B9CmS30n0Ojvyz7Ajrrcj/0w7+sdgx/hl
2WX4sJf9j9tV/AnPJlzsaL/Jjv4129H/OXb54pTj89MNKv5En2fH/LXasT/b
7Jj/mh3j57Zj/w7asT6aiT5KeIud4k/yW+10P0d4mx3rO2HH/tVup/q2Y312
kP4pO86fnXaafxzYnzMcOD/qHXj+yHTQfER4lgP3H6MD+2e2g+43Hbj/mBzo
H7MD9c9xUH91YH/Nc+D+be2iN2xZ6POo+DswvzQH5qfbIcGCvabsVSr+Drlu
1Nq3opUq/g7sP1HCW4g+RnirA/tj3IH9p80h23ouGnKhTcWf8HbCkw6sjw7i
n3JQ/Tuo/p3onwwn1qfeSfXvRP8ZnFg/WU6sP6MT6yPbSfenTtw/TU7MX7NT
pvf4qo9tjYq/E+vP4sT6yXNifludWD82J90/O3F/dBN90InzWTPpH3VifrY4
cb6IObE+Wp00vzmx/tqcWH8J0r/dSfOdE/O/g/yTcmJ/6HTS/FuH+mfUYX3p
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
v4PwE6R/ivDTlJ+dFP9z/x+f/wZDCaWL
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
Jrv87YVYKQe3UboDjt2EWC2HnNJBixr0EuJ8OXwSBXz7q7cQ6+Xwsslsmx1d
hbhADg/aT5lysJ0QF8nBepepRoJYiIvlkPygu86qixAbWP0SOeSfdhol6i/E
pax+mRyKEo7InnYUYqMcIqtaH+/YVogrGW5i/Go5XJhX1v56XyEWJVPcIpnq
t0yGo8EXne91F2LrZBiu6KCY4yDE4mSwvpMfn+ooxLbJ8GDs55JjfwqxvZmf
H3Lq0XghdkiG/FdVh+vOEGJIhjmzJtQFiRC7JIPNxa3TYiYKsSQZNu13a/l5
qBB7sPrSZLjh9vz9+cFC7J8MjZ6qtuQMF2JZMtT4EFu6YgD6n0znK2e4MhmS
611r3G4s+s/y5zO+Ppn6V5BM96Mome5HcTLdP4NZX1bhqret0P9k6l9pMt2f
smTqn9E8vz82ZA3tg/4z3MT6r2b6RCnUH4sU+NTTKqJgCvqfAtlf7z+2nIz+
M1ycQv2zTYFp/sPtJ7ig/ykwLtJu1nRA/1Ngcdc98/oNQv9T6HxcUqh/khSI
aGkY0m0k+p9C90uaQv3zZ3xZCtUfnUL3R87yK1l/6hTqb34KvV99Cr2PghSw
0f++E2qL/rP+ill+A6tfwvBS5k9ZCiya5FkxyAP9T4GN97/n/fBG/83z1zze
LlmC/qdAvydzNkZEov9mfkQN9xFx6H8qiMZeOrcpBv1PBblnp1q2Weh/KrxQ
zVh6Mhv9T4WPcb6LDyxF/1NhQ79JafU3ov+pMOx3y48hf6H/DHdIhaSUCwl9
d6H/qRCuLt7qsAX9T4X7hjcOpVvR/1S4fvWhT/l69J/ll6ZC38b1OsavRP9T
oWu76nHpGvQ/FbIm9r3bQYf+m/OvcD5xUYH+M1zJ9KtTYWPdTQ1qydH/VFhh
tWxg42j0P5XOtyAVPk079nZXCPpvnp90Z5vDi9D/VGjUpH/npXPQf4aXMLyU
4WUsvzEVsrukz2ktQ/9Tqb8m1l91KpzfZ9v8QTj6r6D5LRQwfOe5X75e6L8C
arTvOnHdTPRfwe5fQffPVkHfb3sFe/8V9H0ABfQ7etA22A39V9Dvg4Tl91CA
3D5K2dkf/VeAtWj0F5Uf+q+A3dca+L33Rf8VEPGn/97eUvSf9S9XwI34vMAr
nui/As5nylfccUX/mf58Nh8967+A5S9i+osV9P01KOj3s4TxSxX0/SxT0PfN
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
zL/qXPp+ifLY/efBmRunAhouRv/z6PtnnUf9ETO+LePbM75DHr1vyKP6XfJg
wfExdjId+p8HP7MbrS7ToP8Ml+bB1dfRx+stQ//zqD8yc/1LA2bGZqH/DJfn
gX7K04eD89F/c3/et+uPVqP/eTDG8oTNsnXofx6UP8zQ/VyD/rP6BXkwpOPu
KeuXo/8sfzHLb8iD3nb66G256D/TV5pH96ssj+6XkfEr8+j+m5j+6jy6fyI1
3a/aaopbqKl/jdRsP9T0/qwY31pN/Wtvxmte+Za5BffHXH+3a02/1UJsowaL
pHYhV1fiPqnhUP9a2V0KhNiO8e0Zf6Aa4v+SlnltxH1j/BFqKISPB+z0uH+M
76Sm/rmoqX+TGC5Rw7OCN2+qkoV4OtPvoab77a1m75ea+uOrpv76s/oBTJ9M
Db1nuHzYvUeIw9Vw2qa5j3UR7rsalLrgXa6FQhyvhndnNo96sQP3Xw1XW3V2
aFIsxAo1LHj2ckvkQbwHxs9m81erwfPjvVL5LiFeyuabz/pfw+anV8PT68sX
fdgkxJtY/QKzP2Vf4wNOCPEOc/5Fa+wHnMH7Yvr3M36xGn4c2N/y4X4hPsZw
A8PPmvev4MyrW8fwHll/l5m+Urbft9T0fSlT0/utUNP7NKrp/T5heCXbryq2
Xya2Xx/Z/lSr6fv0g/FFGvp9qq2h30cLDTg+b7k9Nw7vX0O/35Ya+n5YMb61
hvbfXkPnI9bQ/m00tD9bVt9OQ38/2rP8AzX0++Kgoe/XCNY/MP1ODHfR0O/b
JA37fcL0T2d8Dw19H71Z/1LWv6+G3T+bT4CG/b7R0P0JZ/OL1tD3JZ7hcg29
T4WGvi9KDX0/szX0/VBrYMxQv/WrT+H9m/l/W7j5nMf718DTb38++XoB718D
g8e5X9x8GO9fA+ujcmaNPIr3r2H3z/AdGvq+FWno+7Pf7H9aomLcPrx/DX0f
jrH+DKy/sxr6vpRo6PtzmeUvZflvaaDT/KEdjmzD+9fQ96WC4UbGf8LqV7L+
qjQwuXdEhOYi3r8GDnoV1u15Ce+f6avW0Pf9h4a+byItnW9tLZ2/hRZarLpx
6u+zeP8Mt9TS74OVluqz1tL67bV0fmKG27D8tlo6fzst3LWwb1LbgPevpfMZ
aK6f/WiF4TLev7m/Y617elzF+2c4aOHKqIt7re7h/Wvh9OQjFR1v4v2b56Mf
9I/jA7x/LdS7vsTv3kO8fy38eOCtfnoH718Lul3df0++jffP+vNm9aVsvr5a
6q+/FnolmgIP3sL714KpavKRt9fw/ln9cPP8muo6J9zF+zfnPxM74vpzvH/z
/P4oUzZ4jPfP+AotbNc6FQ59hvevhdE+TdpueIL3r4WOB1TNL7zF+2f4Ui3E
fyi64v8C75/ha7QwWPbbcUcF3r8WZDU2fAl9hPfP6hew/ncwvEgLT7o+nyN6
hffP+ivWwkGFW3K/N3j/DDdo4Xu9Og2rvuH9m/27czVm+le8fy2su3h/6oQa
0f/Fl7VwKtLHvdtnvH+G3zLvx7cWjx7VFOIyLTSv6nLoTgMhrjDrX7n1xN7f
eP/m/fMP6dPuF96/2d+Wnwd+fo/3z/qvMu/H9A6mFVV4/2w/PzJ/q9n8fjBc
pINeW/Mrj33B+9fR+VjowNPZ7nzOR7x/Ha1vqaP+WemoP9Y62l97Hb0fsY7q
s9HR/bBl+e10tH97HdU3kPEddHT/RjAcWH4nhrvo6PswSUfvV8Lw6Tp2/0y/
N9MvNc+3g2JixnW8fx29b38dfb8CdPR9kOno+xiuo+9/tI5+n+MZX87yK1h9
pY6+X9k6+n1S6+j7tZTVz2f4GsbXM3wTwwsYvkNHv19FTN9+Vr+YzecY4xsY
/yzDSxh+WUd/v5Tq6Pfrlo5+38p09PtawfIbGf6E+VPJ9qOK7adJx77/TH81
8/fH//v7PwiZWcw=
         "]]}, {
        Hue[0.14213595499957954`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
nw+Ngj9/OtKfXsH7Z1DAs9XSG4diUD/pz6iAQ/8e/1Qdh/pJvCgWrhwcOeCS
L+qP5f2VxMKhvzrG/+2C+mP5+UIsP39pLJw529fx1jLUH8vPX07ilbH8+dPE
Ev9j+fOjj+XPj0GID5g+fawN6hfiF3xodmAg6o+FDeVznd/2Q/2EF8VBxxdF
x+KGof44GHPCMNFtBuqPg8GXfvf1mYT648Cs51BZzkzUHwdT913r4DQX9cfx
51NGeDnJr4zjz7cmDrzdnLsPnYb644j+OH6+hjiodz7fuMQL9cfx+2skvCmO
nP94/vyK4/n8kng+3jIexjz3K1vuj/rjef+kJF4Wz99f8njoOfhjRmIC6o/n
z5+G5NfF8+dHHw+9Gs5uFbMI9ZP6lfH8/I3x/P1kioc5Gx+9tFuI+hN4XpwA
CRD+p/l81E94S8ILiD//hJclEP8TiP8JvL+aBOJ/Arn/SLwhATa8/Xz1ox3q
J7wxAarlpa56Z9SfwJ9fUSLRn0j0E96S8EB4aSK5/xP5/uWJvH/KRH4+mkS+
Px2J1yfCh3FtD2wYh/oTQd38bh8za9Qv5L+7qVA+BvUL+TMGrJ49GPUTXpQE
1XaiRztGoP4kmKsYEzrFCvUT3pLwQHhpEn+/yJLgUGmQ6O4o1J/E11cm8feL
hvC6JP591Cfx8zUkEf+ToOjbi7rvk1E/iTcRXpTM1xcn8/erJJm/Py2TweyT
qlrVH/Unw1XPJyNO9kb9yfBB7DtudWfUnwzroiJDQr+HMv3JkPiu9/WWrVF/
MoT9eiy6hwXqT4Zdh5YOejoE9Sfz89Un8/M3JPP3d2UyJHS56NDeEvUnE/8J
L1LC94bRbQt6Mmym5P0TK3n95oSXKPn+LJT8/lkq+fNpreTnC0reH3sl77+U
5HdV8v3LSH9+SvC22q3rL8HzpoTFU9ZdtDRnWKGEFdcnJ33pgfNXwrSlyT2n
mzGsVvL+aJQQVt++vlMThouVsCvv4L4HzdEfJXQ8+RoiWzJcqgSJ/t/OAR3Q
L0G/0bK0QSeGy0h/BjL/CtJfJdFXpeTPn1HJn78aJcydl187Xox+K0G3dtvd
5w0YrlNCRuHCM2lv2XkUpcDl18v+GneHYbMUnhenQLvQdks+P2XYPAUs5g9v
9uQjw5IUPr9FCvyb/XFvi5uMt0yBg49W77TbwrB1CmRObnolejvDQHj7FHCN
uRi5IZNhqfB9Z3cnuYph1xT4Zr35yPc8hmWE90sB+UjYporEfUuBQ7kzD453
Z1iRAtWDH2pbLmFYSXg14TUpsGhun3+LvRguToErcl+P/iEM6wS8uu2DIYUM
lxJ9+hQIXVIjyfmN4TKh3sEPw6ekMGwQ9OrC32/dyXBFCjxLHKo238hwJYmv
SoH1/8b/WLKCYaPwvXN66/ZJDNekQIda89dP4hg2pcCgqjG/Xc1muC4Fphx3
nnZ0DfqfCt88Zo9q/Dv6n8rz4lS+vnkqP1+JgJsXD05yZNgiFTaUDm4+by76
nwodLsnlD1zQ/1TIfHvwjr8H+p8K6/+6kbYgDP1PJf4L/RTtrvgjBv0nvCyV
n5+f0K9Ks7bwKPqfChl+e+0SL6L/qeByoVvA7ivoP+HVqbDO4fJHv3voP+GL
U6H9DH/jewP6nwpPt91q2Ksc/Sf59YQvI/EGkr8ilfifClBdf8JwAv1P5c+X
MZU/fzWp/PkwpfL7VUf8FaXx/pql8fFiwpsTXpLG57dIg4EN/m53aw/6n8af
L+s03h9I4+djn8bPRyrU69svdvlh9D8NLp85vNDqAPqfxs/HL42fvzyNv98U
afz9pBT6HZSZe78S/Sf5NURfcRo/P10af/+UpvH3kz6N38+yNH5/DGn8flaQ
/JVk/lVk/kZhXr+c9n65Dv1P48+PifB1JF6k4vs3U/H3h1jF76e5Cgbty+9R
4Yv+q/j9tlBB/XOncpMd+q+CDclp+faD0X8VXO3ZJairBfqvAnV566Wek9B/
FSz6NS5ZOwX9V0F1w9HmTazRf5JfpuLvHz8Vf7/Ihe/bfpv0JQD9J7yS1FeT
+hpSv1gFhzw3jh9lg/6T+FLC61Vwxe7U816z0X8Vfz8aSP8VhK8k860i/RtV
/PtUQ3gTyV9H8ovSed4snZ+vOJ1/H83TYWpA47l7nNF/AU9xu7FtBPqfzuu3
TIfBGc83nrZF/9MhzPheHzMM/U8n/qdDx00Vn26NQv8J75rO+yNL58+XH8kv
T+f9Uwj51no/ceuO/gt6T+yc+aof+p/On08N0VdM8uvS4fD4r6eGmqP/pH89
qV9G5msg86kg86sk+qpIfiPhawhvIvXriD5RBq/fLAMGL5004Fhv9J/w5hn8
/CQZEHbYbkxYS/Q/A6aZH3DVtUH/M+Dqp5AP7Zug/xnQUaoQXXgX8h+GDPge
uNj54SOG7TMgPH/DsYAahqUZsLj+r8a5PdH/DL5/mZAvVhJ/rR36nwG6hfc7
TDVD/zN4fxSkfyXpTy18385x+oBPrL6G9FdMeF0GPNc/61P3geFSod8bA7PT
vzGsF/DOlLbJVQyXZcCQlu9G7L3PsIHEV5D4StJfFdFnJP3VZMC1y+ejWz1h
2CT48b7lo9WvGa4jvCiT580yef/Emfz8zDP5+hISb5HJ+2uZyeu3zoTnmRNK
P1xF/4V8Q61W21Sj/5m8fmkmr9+V8DLC+2Xy/soz+fOhyOTPl5L0r87k/dGQ
/osJr8sk/mfy89VnwuBRq3Yf+IH+k/qGTCirKb0ouY7+C/2c9/QsqkD/M6HT
gMr0M5cYriLzM5L4GtKficy3LpM/vyI1f37M1Hz/YjWf31zN9ycRvt/cs77J
KfSf8JYkv7Wa7w8E/GT64e1l6L9Q75RI2m0f+q+GjfefbB62gWFXNXT6MaDl
8VL0Xw22647V5G5l2E8N2V/Kv0wtYFiuhiWuI7qFaxlWEF5JeLUaXox+s/+Z
Gv0n+YuFfhrn9Bx9Bv0n8ylV8/PVE/1lauK/mvenQk32X032X82fb6Oaf59q
1Pz7YVLz72edmn9/RFl8vFkWf7+Ks/h48yz+/ZOQeIss8v5n8b8vrLP43x9A
8tuTeGkWv7+uWfB9RcNrTxvg/Z9F9j+L3P9Z/P4pSLwyi5+/Oos//xrCFxNe
l8XfD6VZkDWz09t5t9D/LH5/y7JgScrdFYqD6L/wvSQ4fOZ+9D8Lfkzdf/f2
MfQ/i9+vKlLfmEX2n/CmLP5+qsvi72dRNmSFn/BdWIf7n83PR5zN34/m2fz5
lmTz+i2y+f22JLx1Nn8/QDaEe38Br3O4/9m8fmk2Px9XwstIvB+pLye8Ipvf
X2U2f7+os2HokXUTNq5E/wWs+XR6TTj6nw1HgvWLW/uj/9mQfbVH4oQg9J/w
+myodLza9KsC/Rfq7R8/0CIB/Sf5K0h8ZTa8aGVr/cgb/c8Gt+FZGwJD0f9s
iOiwfbZLMvpP8ptI/rps6Lz7Tqd9y9H/HOicNnxt6WT0Pwdqnq49cWcq3v85
4Nb0cT9vB/Q/Byot+uf+swD9z4EjtmbGpjPQ/xwY5jvHbsU89D+H7986h+8P
cvj52BNeKvR3K1lzMB39zwHbyA4hGanofw6vz4/Ey3PgR9cWyyqL0f8c3l8l
ya8m+TWELya8jvClOfz7pM8h+59Dfv8RviKHP5+VOfz5r8rh98eYw7+fNTkQ
PmHe+aWb0P8c/v6oI/lFufz7Z5bLz0dMePNcXp8kl+/PIpd/vy1z+f2yJvmB
5LfP5d9naS5/PlxzeX9lQr1Vrrc65KL/ufz7LSe8gtRXkvpqEq/JJf7nEv9J
/lISryf5y0j/hlx+fyty4afJ49mFKPQ/F6bPDvyYvAz9z+X3zyh8/+cR/7NO
6H8uv3+mXP5+qhPqvfpRKXVD//N43iyP709MePM8sv95kJNwOXN4f/Q/D6b3
OauInYD+50GXEX9vXfs1+D9snQczKsPTgj4zDIS3z4OXhbMrLtYzLM2DqNCm
HhM/MuyaB5vbrJnUxsSwLA9yByVo+xgZ9suDYxfayj8+YFieB1uqP5xtdoVh
hfB9g5tdepxgWJkHN5Y87H99G8PqPOh66PlotYZhTR4sE5tsJ8UxXJwHr97u
fKiXM6wjfGkeHP81NP2ulGG9kC9v0rGUYIbL8iBvX1qftjEMG/Ig+pJ3dF9f
hivyYGvA1/m1ngxXCniK4923wHAVyW/Mg9flDT13zmG4Jg9uGp8dOjmRYVMe
jLA/8MZnMcN1eWA/5HqxUwDDonw4PreLyBjBsFk+3Bg5evelNIbF+fCq83zX
w0UMm+eD+7jiU7brGJbkg+Waxk8idAxb5PPzs8yHvKrB6zqtQf9Jfsjn52Of
z+uTCt83zxtxTob+5/P9ywjvlw/LXthdHOuC/hNeQXhlPj9/dT7vr4bEFxNe
R+JLSX/6fP58lJF4A4mvIPGVhK/K58+HkcyvhszPlA8n6s+3uDEU/c/nz4eo
gOfNCuD12sU1mweh/wUgO7lh3ohR6H8BHy8hvEUB2N9L2Ty9H/pfwJ9f6wKI
2XTiWw9b9J/w9iS/tAC62bw7FzkA/S+ARi6VXbO6oP8FUDAqZ/+31ug/4eUF
0P3lukrfx0H/YUUBnEy5uuZUOcPKAlAMOJfT/D7DaiFfy6djP71iWCN8vzO6
0/kXDBcXwLbzrv737jCsK4C3kuUKzWmGSwtAc0Q7tWYLw/oCsHI62wrUDJcV
wKnhSVv3JzFsKACPbj+9upQyXCF8Hx+YOWMXw5UFcMv7zYxdNxmuKoDGTZT9
Ev5i2FgA29fp3904wHCN0M+XI9+z1jNsKoDYW5Gr6lcwXEfqizRwu0OJ4/p8
hhsL+NXH278FMmymgbi0fhvfz2W4lQZ+6bEg0G4kw2INeEa7x33vznBHDeyo
9M36ownD5hrQvpn58M9Pgf/hHhqINxsy4kE1wxINOPgXz2/5kuF+GmjatsB2
wU+GLTQwem+fPv3rGR5CeEuSf5TQz5xDPz/XMWytgarQbz6qhqyfCaQ/IPlt
NdDzYuPo8W8YttfA+0Fhxf7vGXbQwOmch0eL/2FYKuTbfqrNnicMOxPelcS7
kfwywnsR3k/It3w0aK8xHKQBU4MLv3heZliugWbPn1+Y+4DhSMIrNFC05uuL
o/sYTtDAHDBVNT7PsJLEqwivFvz6O+3QrTMM52rA65t3i1f7GdYI33exd/+x
ieEVGhhjNWh/+yKGizXgff1EwdMChks00EtxQDl0G8M6DexcENpVV8LwFg3c
rW34Rb6a4VKSf7cGEg7dt7m2gWE9iT9A+DKhH7frQ7oeYvg4qW8g8ykX8iV1
WbHtFMMVwjyrJJvddjB8WZjXiUnz7I8wXCmcr192hcUcZ/gmyV9F+n9A5mck
9Z8R/TUk/g3RZxL0tUgd20rOcK1Qv79XjkTGcB3h6zWwolcDxfYZDIsKwUcZ
vOb2TIYbF0KiV86MM4sYNiuEXY169StayHArwosLYYX9jn/2+DPckfDmhO9R
CPc27W/gNR/3v5Dvr18hnHkxoTLJB/efxA8pBO8dnTo9DML9L4SEPKvTFQm4
/0K/Q/5cvzoW95/kn0DioRDuXlqcEBCN+094e1LfgfQvJfNxJvpdC2HuuS9+
H9xw/0m8rBDMps74e5QU97+Q98evECTfj4m7TcT9L4Sxj+8ebzIH91/AZSOm
/hyI+y/46XKuV2V/3H8BD/tl64VGuP+FcF+6vJVLa9x/AQ84Wih9FfAfVhXC
vFk/6x5+ZFhdCNY+jx3+ecpwbiH4NokadNbIsKYQyoNsZYHfGV4h9Huzw6oO
3XD/hXwR2yOedcb9F+bT3sbxYAfc/0LY/fvVYRli3P9C+LDUwmom4P4XwtmT
KxYopuH+k/nqif4DQr570TtyrXD/SfxxwY+See9ejcP9J/MvJ+evgvh3mfCV
5HzdJOevipyfB6R/I8n/jOSvIfnfCN+/2/D0SzLuPzm/tYX8/VFXCM1WrLo5
ZRXuP4kXafn+Gmt53kzL71crwou10Gteq6YD0nD/tfz9b67l7/8eWigKcww+
kIv7r4UPGZV75nni/mv5+8tCy/s3RMufD0vCjyK8tZa/3yYQHrSQaPP00rEx
uP9a/nzYa2HlZ9fvur64/0K9lW/uhUlw/7X8+XUWvr+iT10jwv3XQu9dgd1b
f2H74aaF8mkl1V73GJYR3ksL/7SsmjjhX4b9tPx+BWkhyfBqSekVhuUC3602
wP0ww5FCvtSzuqY3GVZoYc+ypHGxFxlO0ML9H+26zPqTYSWJV2nB749+ow+t
wf3XwkfN31csCnH/hXxjbp8M3477T+JXaKGPZcSur3kMF2thb+thtkEqhku0
kByyxmdtJsM6LbR0WPCzdRLDWwT8v3+waAnDpVo4V7E5yjGM4d1acNzm3qbc
l2G9Fh6mdd0+xp3hA1ro+6jPoTd2DJdpoXZSQVX32Qwf18L5ObuaTDJj2KCF
ff55i5zq/P/D5Vp4ZNZ7bN9PDFdoQflx4+fMnuz7y1rwb6uaVdKG4Uot2MhN
QZfaMXyT5K/Swqc3k562acLwA5LfqIV+noNm3H3E8DMtzG94su/O+wzXaOHP
fo1yxlYz/EYLrZNbrXl7lWGTFib01MWcvMRwrRZWW/UqW7SJ4TotpM5r0CpE
y3C9FtoMPb7FqGZYVARf7NfX1SoYblwERi+lQ3N/hs2KIHCqTXX8MoZbFcGa
x1fPOLgxLBa+t6n6q+EMhjsWwf4S29oRMxk2L4KJcT9zt0xmuEcR9F/12Fg2
nGFJEQSZXr0P6cpwvyJ43N7Spb4PwxZFsGB01MmsIQwPIfGWJH4U4a0JP6EI
0m6alSweyDCQ/mwJby/oiSiJHdyfYYciqLuyVf24LcPSIhgQPM5nfyuGnYXv
Z9X+6NeIYdciuDCs/S5xB4bdBD2trkxLa86wrAgmWez77bevfv9hLwE7urRf
34PxfiQ+iOiTk/lHCt+7HP21yxiGFWR+CWS+SsHPsv72M8YxrCLx6iJQ7ZL1
dm7KcC7pX0P6W1EEawuSrkzuzHCxUO9l5oNPP5m+EhKvI/m3FIE4q/vR8/Xs
+1LC7ybz15P5HyiCi00CLFuYWHyZ8P2W763vv2H4eBEE/zk1yu8zwwYSX07y
VxB9l4m+SnK+bpL4KpL/AeGNxJ9nxJ8aUv8NqW8i+WvJ/OqK4I/eDqqeRobr
i+DSH11tvu/wg/8DcbI3Tg==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 151.25}, PlotRange -> {{0, 1300}, {150, 400}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"p(t)\"", TraditionalForm]}, AxesOrigin -> {0, 151.25}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     LabelStyle -> {12, FontFamily -> "Times New Roman", 
       GrayLevel[0], Italic}, Method -> {}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
          "\"p(T)= 290.6\"", ",", 
           "\"<A\\!\\(\\*SubscriptBox[\\(>\\), \\(T\\)]\\) =-0.071\""}], 
         "}"}], TraditionalForm], PlotRange -> {{0, 1300}, {150, 400}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"p(T) =285.\"", "\"p(T) =381.\"", "\"p(T) =291.\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.038000000000000006`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 12, FontFamily -> "Times New Roman", 
          GrayLevel[0], FontSlant -> Italic, FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False", ",", "False"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"12", ",", 
                 RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Italic"}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.70977065875883*^9, {3.7097706990231333`*^9, 3.70977071819623*^9}, {
   3.7097707535152497`*^9, 3.7097707589975634`*^9}, {3.7097709501684976`*^9, 
   3.7097709749369144`*^9}, 3.709771019022436*^9, {3.709771050981264*^9, 
   3.7097711281626787`*^9}, {3.709771239841066*^9, 3.7097713126742315`*^9}, 
   3.709771412704953*^9, 3.709771522352225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PA", "=", 
  RowBox[{"Uncompress", "[", 
   RowBox[{
    RowBox[{"ReadList", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\Jack\\\\Desktop\\\\LabWork\\\\final\\\\PTAT.txt\>\"",
       ",", "String"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7097708317837267`*^9, 3.7097708364579935`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"300", "-", 
      FractionBox["53", 
       SqrtBox["101"]], "-", 
      SqrtBox["101"]}], ",", 
     RowBox[{"-", 
      FractionBox["149", "1279"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"300", "+", 
      FractionBox["6", 
       SqrtBox["101"]], "+", 
      RowBox[{"8", " ", 
       SqrtBox["101"]}]}], ",", 
     FractionBox["819", "1279"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"300", "+", 
      FractionBox["7", 
       SqrtBox["101"]], "-", 
      SqrtBox["101"]}], ",", 
     RowBox[{"-", 
      FractionBox["91", "1279"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7097708327127795`*^9, 3.709770836869017*^9}, 
   3.7097715775803833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"PA", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7097708389881387`*^9, 3.709770864419593*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "284.6764272707661`", ",", "380.9960272830931`", ",", 
   "290.64665041202613`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7097708411422615`*^9, 3.7097708648616185`*^9}, 
   3.7097715403352532`*^9, 3.7097715816246147`*^9}]
}, Open  ]]
},
WindowSize->{1920, 980},
WindowMargins->{{-9, Automatic}, {Automatic, -9}},
Magnification:>1.8 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (32-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 402, 10, 54, "Input"],
Cell[985, 34, 9882, 250, 175, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10904, 289, 2576, 64, 191, "Input"],
Cell[13483, 355, 47997, 870, 486, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61517, 1230, 380, 9, 54, "Input"],
Cell[61900, 1241, 785, 28, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62722, 1274, 216, 4, 54, "Input"],
Cell[62941, 1280, 264, 6, 85, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

